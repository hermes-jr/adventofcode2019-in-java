package level_17;

import common.IntComp;
import common.Level;
import common.Point2D;

import java.util.*;

public class Level17 extends Level {
    IntComp ic;
    String prog;
    Map<Point2D, Integer> screen = new HashMap<>();
    private final boolean VERBOSE = false;

    public Level17(String input) {
        prog = readResourcesFirstLine(input);
        ic = new IntComp(prog, 0);
    }

    public long p1() {
        ic.run();
        StringBuilder cameraFeed = new StringBuilder();
        Queue<Long> o = ic.getOutput();
        while (!o.isEmpty()) {
            cameraFeed.append((char) o.poll().intValue());
        }
        System.out.println(cameraFeed.toString());
        return -1;
    }

    IntComp.ReturnReason step() {
        IntComp.ReturnReason returnReason = ic.run();
        Queue<Long> out = ic.getOutput();
        for (; !out.isEmpty(); ) {
            int x = Objects.requireNonNull(out.poll()).intValue();
            int y = Objects.requireNonNull(out.poll()).intValue();
            int type = Objects.requireNonNull(out.poll()).intValue();
        }
        return returnReason;
    }

    private void renderScreen() {
        StringBuilder result = new StringBuilder(System.lineSeparator());
        int xMax = screen.keySet().stream().max(Comparator.comparingInt(Point2D::getX)).orElse(Point2D.ZERO).getX();
        int yMax = screen.keySet().stream().max(Comparator.comparingInt(Point2D::getY)).orElse(Point2D.ZERO).getY();
        for (int i = 0; i <= yMax; i++) {
            for (int j = 0; j <= xMax; j++) {
                int pixelType = screen.getOrDefault(new Point2D(j, i), 0);
                char pt;
                switch (pixelType) {
                    case 1:
                        pt = '#';
                        break;
                    case 2:
                        pt = 'o';
                        break;
                    case 3:
                        pt = '=';
                        break;
                    case 4:
                        pt = '*';
                        break;
                    case 0:
                    default:
                        pt = ' ';
                }
                result.append(pt);
            }
            result.append(System.lineSeparator());
        }
        result.append(System.lineSeparator());
        System.out.println(result.toString());
    }

    public static void main(String[] args) {
        Level17 l = new Level17("input");
        System.out.println("Part1: " + l.p1());
    }

}
/*

..................#######................................
..................#.....#................................
..................#.....#................................
..................#.....#................................
..................#.....#................................
..................#.....#................................
..................#.....#................................
..................#.....#................................
..................##########^...................#########
........................#.......................#.......#
........................#############...........#.......#
....................................#...........#.......#
....................................#...........#.......#
....................................#...........#.......#
....................................#.........###########
....................................#.........#.#........
....................................#.........#.#........
....................................#.........#.#........
....................................#############........
..............................................#..........
..............................................#..........
..............................................#..........
..............................................#..........
..............................................#..........
..............................................#..........
..............................................#..........
......................................#########..........
......................................#..................
......................................#..................
......................................#..................
......................................#..................
......................................#..................
......................................#..................
......................................#..................
..........#########...................#..................
..........#.......#...................#..................
..........#.......#...................#..................
..........#.......#...................#..................
..........#.......#...................###########........
..........#.......#.............................#........
........#############.#.........................#........
........#.#.......#.#.#.........................#........
........#.#.......###########...................#........
........#.#.........#.#.....#...................#........
###########.........#.#.....#...................#........
#.......#...........#.#.....#...................#........
#.......#...........#.#.....#...........#########........
#.......#...........#.#.....#...........#................
#.......#...........#############.......#................
#.......#.............#.....#...#.......#................
#########.............#######...#.......#................
................................#.......#................
................................#.......#................
................................#.......#................
................................#.......#................
................................#.......#................
................................#########................

 */